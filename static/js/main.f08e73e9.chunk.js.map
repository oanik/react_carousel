{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","props","scrollLeft","e","deletedArrayItems","buttonNext","target","state","scrollWidth","imagesState","itemWidth","animationDuration","boundValue","length","setState","disabled","step","setTimeout","animation","splice","concat","Math","floor","images","prevProps","this","frameSize","className","style","width","height","transform","transition","map","image","index","key","src","alt","type","onClick","React","Component","App","arrayOfImages","firstPartIMGArray","slice","newIMGarray","generateArray","value","onChange","event","valueSet","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f08e73e9.chunk.js","sourcesContent":["/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Carousel.scss';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scrollWidth: -props.itemWidth * Math.floor(props.images.length / 4),\n      animation: props.animationDuration,\n      imagesState: props.images,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { images, itemWidth, animationDuration } = this.props;\n\n    if (prevProps.itemWidth !== this.props.itemWidth) {\n      this.setState({\n        animation: 0,\n        scrollWidth: -itemWidth * Math.floor(images.length / 4),\n      });\n      setTimeout(() => {\n        this.setState({ animation: animationDuration });\n      }, 50);\n    }\n\n    if (prevProps.animationDuration !== this.props.animationDuration) {\n      this.setState({ animation: animationDuration });\n    }\n  }\n\n  scrollLeft = (e) => {\n    const buttonNext = e.target;\n    let deletedArrayItems;\n    const { scrollWidth, imagesState } = this.state;\n    const { itemWidth, animationDuration } = this.props;\n    const containerSize = (itemWidth * imagesState.length);\n    const boundValue = (containerSize - (5 * itemWidth));\n\n    this.setState((state, props) => {\n      buttonNext.disabled = 'true';\n\n      return {\n        scrollWidth: state.scrollWidth - props.itemWidth * props.step,\n      };\n    });\n\n    setTimeout(() => {\n      buttonNext.disabled = !buttonNext.disabled;\n    }, 20);\n\n    if (scrollWidth <= -boundValue) {\n      this.setState({ animation: 0 });\n      buttonNext.disabled = 'true';\n\n      this.setState((state, props) => {\n        deletedArrayItems = state.imagesState.splice(0, 10);\n\n        return {\n          imagesState: state.imagesState.concat(deletedArrayItems),\n          scrollWidth: -props.itemWidth * 5,\n        };\n      });\n\n      setTimeout(() => {\n        this.setState({ animation: animationDuration });\n        buttonNext.disabled = !buttonNext.disabled;\n      }, 20);\n      setTimeout(() => {\n        buttonNext.disabled = !buttonNext.disabled;\n      }, 10);\n    }\n  };\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      images,\n    } = this.props;\n\n    const\n      { scrollWidth, animation } = this.state;\n\n    return (\n      <>\n        <div\n          className=\"Carousel_container\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n            height: `${itemWidth}px`,\n          }}\n        >\n          <div\n            className=\"Carousel\"\n            style={{\n              transform: `translate(${scrollWidth}px)`,\n              transition: ` ${animation / 1000}s`,\n            }}\n          >\n            {images.map((image, index) => (\n              <div\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${image} - ${index}`}\n              >\n                <img\n                  src={image}\n                  alt={index + 1}\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${itemWidth}px`,\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"Carousel_buttons\">\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              this.scrollLeft(e);\n            }}\n          >\n            Next\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n\n};\n\nexport default Carousel;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 2,\n    frameSize: 3,\n    itemWidth: 100,\n    animationDuration: 1000,\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  generateArray(arrayOfImages) {\n    const { length } = arrayOfImages;\n    const firstPartIMGArray = arrayOfImages.slice(0, length / 2);\n    const secondPartIMGArray = arrayOfImages.slice(length / 2);\n\n    const array = secondPartIMGArray.concat(arrayOfImages);\n\n    return array.concat(firstPartIMGArray);\n  }\n\n  render() {\n    const\n      { images,\n        step,\n        frameSize,\n        itemWidth,\n        animationDuration } = this.state;\n\n    const newIMGarray = this.generateArray(images);\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <div className=\"Labels\">\n          <label>\n            Enter step:\n            {' '}\n            <input\n              type=\"number\"\n              value={step}\n              onChange={(event) => {\n                const valueSet = (event.target.value > 2 || event.target.value <= 0)\n                  ? 2 : event.target.value;\n\n                this.setState({ step: Number(valueSet) });\n              }}\n            />\n          </label>\n          <label>\n            Enter frame size:\n            {' '}\n            <input\n              type=\"number\"\n              value={frameSize}\n              onChange={(event) => {\n                const valueSet = (event.target.value > 5 || event.target.value <= 0)\n                  ? 5 : event.target.value;\n\n                this.setState({ frameSize: Number(valueSet) });\n              }}\n            />\n          </label>\n          <label>\n            Enter frame width:\n            {' '}\n            <input\n              type=\"number\"\n              value={itemWidth}\n              onChange={(event) => {\n                const valueSet = (event.target.value > 200 || event.target.value < 50)\n                  ? 130 : event.target.value;\n\n                this.setState({ itemWidth: Number(valueSet) });\n              }}\n              step=\"50\"\n            />\n          </label>\n          <label>\n            Animation in ms:\n            {' '}\n            <input\n              type=\"number\"\n              value={animationDuration}\n              onChange={(event) => {\n                const valueSet = (event.target.value < 200)\n                  ? 500 : event.target.value;\n\n                this.setState({ animationDuration: Number(valueSet) });\n              }}\n              step=\"100\"\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={newIMGarray}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}