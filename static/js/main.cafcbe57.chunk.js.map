{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","props","setContainerSize","imgWidth","arrayImages","length","scrollLeft","e","deletedArrayItems","buttonNext","target","state","scrollWidth","boundValue","containerSize","itemWidth","container","document","querySelector","setState","disabled","step","setTimeout","style","transition","imagesState","splice","concat","Math","floor","images","animationDuration","this","frameSize","className","width","height","transform","transitionDuration","map","image","index","key","src","alt","type","onClick","React","Component","App","arrayOfImages","firstPartIMGArray","slice","newIMGarray","generateArray","value","onChange","event","valueSet","Number","ReactDOM","render","getElementById"],"mappings":"kOAiJeA,G,8DA1Ib,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqBRC,iBAAmB,SAACC,EAAUC,GAAX,OAA2BD,EAAWC,EAAYC,QAtBlD,EAwBnBC,WAAa,SAACC,GACZ,IACIC,EADEC,EAAaF,EAAEG,OADH,EAGqB,EAAKC,MAApCC,EAHU,EAGVA,YAEFC,EALY,EAGGC,cAEgB,EADf,EAAKb,MAAnBc,UAGFC,EAAYC,SAASC,cAAc,aAEzC,EAAKC,UAAS,SAACR,EAAOV,GAGpB,OAFAQ,EAAWW,SAAW,OAEf,CACLR,YAAaD,EAAMC,YAAcX,EAAMc,UAAYd,EAAMoB,SAI7DC,YAAW,WACTb,EAAWW,UAAYX,EAAWW,WACjC,KAECR,IAAgBC,IAClBG,EAAUO,MAAMC,WAAa,KAC7Bf,EAAWW,SAAW,OAEtB,EAAKD,UAAS,SAACR,EAAOV,GAGpB,OAFAO,EAAoBG,EAAMc,YAAYC,OAAO,EAAG,IAEzC,CACLD,YAAad,EAAMc,YAAYE,OAAOnB,GACtCI,YAAgC,GAAlBX,EAAMc,cAIxBO,YAAW,WACTN,EAAUO,MAAMC,WAAhB,kCACAf,EAAWW,UAAYX,EAAWW,WACjC,KACHE,YAAW,WACTb,EAAWW,UAAYX,EAAWW,WACjC,MA9DL,EAAKT,MAAQ,CACXC,aAAcX,EAAMc,UAAYa,KAAKC,MAAM5B,EAAM6B,OAAOzB,OAAS,GACjEoB,YAAaxB,EAAM6B,OACnBC,kBAAmB9B,EAAM8B,kBAAoB,IAC7CjB,cAAeb,EAAMc,UAAYd,EAAM6B,OAAOzB,QAN/B,E,sEAUOJ,GACxBgB,SAASC,cAAc,aAAaK,MAAMC,WAAa,KACvDQ,KAAKb,SAAS,CACZP,aAAcX,EAAMc,UAAYa,KAAKC,MAAM5B,EAAM6B,OAAOzB,OAAS,GACjES,cAAeb,EAAMc,UAAYd,EAAM6B,OAAOzB,OAC9C0B,kBAAmB9B,EAAM8B,kBAAoB,MAE/CT,YAAW,WACTL,SAASC,cAAc,aAAaK,MAAMC,WAA1C,oCACC,M,+BAiDK,IAAD,SAIHQ,KAAK/B,MAFPgC,EAFK,EAELA,UACAlB,EAHK,EAGLA,UAHK,EASmBiB,KAAKrB,MAF3BC,EAPG,EAOHA,YACAa,EARG,EAQHA,YACAM,EATG,EASHA,kBAEJ,OACE,oCACE,yBACEG,UAAU,qBACVX,MAAO,CACLY,MAAM,GAAD,OAAKF,EAAYlB,EAAjB,MACLqB,OAAO,GAAD,OAAKrB,EAAL,QAGR,yBACEmB,UAAU,WACVX,MAAO,CACLc,UAAU,aAAD,OAAezB,EAAf,OACT0B,mBAAmB,GAAD,OAAKP,EAAL,OAGnBN,EAAYc,KAAI,SAACC,EAAOC,GAAR,OACf,yBAEEC,IAAG,UAAKF,EAAL,cAAgBC,IAEnB,yBACEE,IAAKH,EACLI,IAAKH,EAAQ,EACblB,MAAO,CACLY,MAAM,GAAD,OAAKpB,EAAL,MACLqB,OAAO,GAAD,OAAKrB,EAAL,eAOlB,yBAAKmB,UAAU,oBACb,4BACEW,KAAK,SACLC,QAAS,SAACvC,GACR,EAAKD,WAAWC,KAHpB,c,GAlHawC,IAAMC,YCsHdC,E,4MArHbtC,MAAQ,CACNmB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFT,KAAM,EACNY,UAAW,EACXlB,UAAW,IACXgB,kBAAmB,K,4DAIPmB,GAAgB,IACpB7C,EAAW6C,EAAX7C,OACF8C,EAAoBD,EAAcE,MAAM,EAAG/C,EAAS,GAK1D,OAJ2B6C,EAAcE,MAAM/C,EAAS,GAEvBsB,OAAOuB,GAE3BvB,OAAOwB,K,+BAGZ,IAAD,SAMmBnB,KAAKrB,MAJ3BmB,EAFG,EAEHA,OACAT,EAHG,EAGHA,KACAY,EAJG,EAIHA,UACAlB,EALG,EAKHA,UACAgB,EANG,EAMHA,kBAEEsB,EAAcrB,KAAKsB,cAAcxB,GAEvC,OACE,yBAAKI,UAAU,OAEb,6CAAmBJ,EAAOzB,OAA1B,WACA,yBAAK6B,UAAU,UACb,6CAEG,IACD,2BACEW,KAAK,SACLU,MAAOlC,EACPmC,SAAU,SAACC,GACT,IAAMC,EAAYD,EAAM/C,OAAO6C,MAAQ,GAAKE,EAAM/C,OAAO6C,OAAS,EAC9D,EAAIE,EAAM/C,OAAO6C,MAErB,EAAKpC,SAAS,CAAEE,KAAMsC,OAAOD,SAInC,mDAEG,IACD,2BACEb,KAAK,SACLU,MAAOtB,EACPuB,SAAU,SAACC,GACT,IAAMC,EAAYD,EAAM/C,OAAO6C,MAAQ,GAAKE,EAAM/C,OAAO6C,OAAS,EAC9D,EAAIE,EAAM/C,OAAO6C,MAErB,EAAKpC,SAAS,CAAEc,UAAW0B,OAAOD,SAIxC,oDAEG,IACD,2BACEb,KAAK,SACLU,MAAOxC,EACPyC,SAAU,SAACC,GACT,IAAMC,EAAYD,EAAM/C,OAAO6C,MAAQ,KAAOE,EAAM/C,OAAO6C,MAAQ,GAC/D,IAAME,EAAM/C,OAAO6C,MAEvB,EAAKpC,SAAS,CAAEJ,UAAW4C,OAAOD,MAEpCrC,KAAK,QAGT,kDAEG,IACD,2BACEwB,KAAK,SACLU,MAAOxB,EACPyB,SAAU,SAACC,GACT,IAAMC,EAAYD,EAAM/C,OAAO6C,MAAQ,IACnC,IAAOE,EAAM/C,OAAO6C,MAExB,EAAKpC,SAAS,CAAEY,kBAAmB4B,OAAOD,MAE5CrC,KAAK,UAKX,kBAAC,EAAD,CACES,OAAQuB,EACRhC,KAAMA,EACNY,UAAWA,EACXlB,UAAWA,EACXgB,kBAAmBA,S,GA/GXgB,IAAMC,WCFxBY,IAASC,OAAO,kBAAC,EAAD,MAAS5C,SAAS6C,eAAe,U","file":"static/js/main.cafcbe57.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Carousel.scss';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scrollWidth: -props.itemWidth * Math.floor(props.images.length / 4),\n      imagesState: props.images,\n      animationDuration: props.animationDuration / 1000,\n      containerSize: props.itemWidth * props.images.length,\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    document.querySelector('.Carousel').style.transition = '0s';\n    this.setState({\n      scrollWidth: -props.itemWidth * Math.floor(props.images.length / 4),\n      containerSize: props.itemWidth * props.images.length,\n      animationDuration: props.animationDuration / 1000,\n    });\n    setTimeout(() => {\n      document.querySelector('.Carousel').style.transition = `{this.state.animationDuration}s`;\n    }, 10);\n  }\n\n  setContainerSize = (imgWidth, arrayImages) => imgWidth * arrayImages.length;\n\n  scrollLeft = (e) => {\n    const buttonNext = e.target;\n    let deletedArrayItems;\n    const { scrollWidth, containerSize } = this.state;\n    const { itemWidth } = this.props;\n    const boundValue = (containerSize - (5 * itemWidth));\n\n    const container = document.querySelector('.Carousel');\n\n    this.setState((state, props) => {\n      buttonNext.disabled = 'true';\n\n      return {\n        scrollWidth: state.scrollWidth - props.itemWidth * props.step,\n      };\n    });\n\n    setTimeout(() => {\n      buttonNext.disabled = !buttonNext.disabled;\n    }, 200);\n\n    if (scrollWidth <= -boundValue) {\n      container.style.transition = '0s';\n      buttonNext.disabled = 'true';\n\n      this.setState((state, props) => {\n        deletedArrayItems = state.imagesState.splice(0, 10);\n\n        return {\n          imagesState: state.imagesState.concat(deletedArrayItems),\n          scrollWidth: -props.itemWidth * 5,\n        };\n      });\n\n      setTimeout(() => {\n        container.style.transition = `{this.state.animationDuration}s`;\n        buttonNext.disabled = !buttonNext.disabled;\n      }, 200);\n      setTimeout(() => {\n        buttonNext.disabled = !buttonNext.disabled;\n      }, 10);\n    }\n  };\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n    } = this.props;\n\n    const\n      { scrollWidth,\n        imagesState,\n        animationDuration } = this.state;\n\n    return (\n      <>\n        <div\n          className=\"Carousel_container\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n            height: `${itemWidth}px`,\n          }}\n        >\n          <div\n            className=\"Carousel\"\n            style={{\n              transform: `translate(${scrollWidth}px)`,\n              transitionDuration: `${animationDuration}s`,\n            }}\n          >\n            {imagesState.map((image, index) => (\n              <div\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${image} - ${index}`}\n              >\n                <img\n                  src={image}\n                  alt={index + 1}\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${itemWidth}px`,\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"Carousel_buttons\">\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              this.scrollLeft(e);\n            }}\n          >\n            Next\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n\n};\n\nexport default Carousel;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 2,\n    frameSize: 3,\n    itemWidth: 100,\n    animationDuration: 1000,\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  generateArray(arrayOfImages) {\n    const { length } = arrayOfImages;\n    const firstPartIMGArray = arrayOfImages.slice(0, length / 2);\n    const secondPartIMGArray = arrayOfImages.slice(length / 2);\n\n    const array = secondPartIMGArray.concat(arrayOfImages);\n\n    return array.concat(firstPartIMGArray);\n  }\n\n  render() {\n    const\n      { images,\n        step,\n        frameSize,\n        itemWidth,\n        animationDuration } = this.state;\n\n    const newIMGarray = this.generateArray(images);\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <div className=\"Labels\">\n          <label>\n            Enter step:\n            {' '}\n            <input\n              type=\"number\"\n              value={step}\n              onChange={(event) => {\n                const valueSet = (event.target.value > 2 || event.target.value <= 0)\n                  ? 2 : event.target.value;\n\n                this.setState({ step: Number(valueSet) });\n              }}\n            />\n          </label>\n          <label>\n            Enter frame size:\n            {' '}\n            <input\n              type=\"number\"\n              value={frameSize}\n              onChange={(event) => {\n                const valueSet = (event.target.value > 5 || event.target.value <= 0)\n                  ? 5 : event.target.value;\n\n                this.setState({ frameSize: Number(valueSet) });\n              }}\n            />\n          </label>\n          <label>\n            Enter frame width:\n            {' '}\n            <input\n              type=\"number\"\n              value={itemWidth}\n              onChange={(event) => {\n                const valueSet = (event.target.value > 200 || event.target.value < 50)\n                  ? 130 : event.target.value;\n\n                this.setState({ itemWidth: Number(valueSet) });\n              }}\n              step=\"50\"\n            />\n          </label>\n          <label>\n            Animation in ms:\n            {' '}\n            <input\n              type=\"number\"\n              value={animationDuration}\n              onChange={(event) => {\n                const valueSet = (event.target.value < 200)\n                  ? 1000 : event.target.value;\n\n                this.setState({ animationDuration: Number(valueSet) });\n              }}\n              step=\"100\"\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={newIMGarray}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}